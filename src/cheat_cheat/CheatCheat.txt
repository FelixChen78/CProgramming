/**                                  CHEAT CHEAT                                     */


/**                               C PROGRAMMING                               */

/** C STRINGS
 * new line = \n
 * tab = \t
 * backspace = \b
 * backslash = \\
 * double quote = \"
 * string format specifier = %s
 * character format specifier = %c
 * integer format specifier = %d or %i
 * float format specifier = %f
 * width and precision = eg. %6.2f a float where it is 6 character wide
 * and 2 characters wide after decimal point
 */

/** COMPILE AND RUN C PROGRAM
 * compile = cc fileName.c
 * run = a.out
 * run in current working directory = ./a.out
 */

/** CODE NAME CONVENTION
 * CLASSES: PASCAL CASE = ClassName
 * METHODS: CAMEL CASE = methodName
 * VARIABLES: CAMEL CASE = variableName
 */


/**                                 Terminal                                   */

/** Terminal commands
 * change directory:
 *  cd path
 * delete directory:
 *  rm path; rm -rf path
 * move/change name of directory:
 *  mv path/oldName path/newName
 * open program on vim:
 *  vim fileName.<language>
 * CLEAR TERMINAL:
 *  cmd + k
 * CHECK CURRENT DIRECTORY:
 *  pwd
 * COPY AND PASTE:
 *  cp fileName directoryPath
 * CREATE FILE:
 *  touch fileName.<file type>
 * CREATE DIRECTORY:
 *  mkdir path/directoryName
 */

/**                               GIT/GITHUB                                   */

/** CLONE A EXISTING PROJECT FROM GITHUB
 * git clone <repository link>
 */

/** CREATE PULL REQUEST
 * Pull requests -> New pull request
 * choose base theRepository
 * choose compare theRepositoryMergedIntoBase
 */

/** REVIEW PULL REQUEST
 * Pull requests -> some request -> Commits -> Review Changes -> {comment, approve, request changes}
 */

/** ADD PROJECT TO GITHUB
 * Initial commit and push to repository:
 * git init
 * git add .
 * git commit -m "first commit"
 * git branch -m Main
 * git remote add origin https://github.com/FelixChen78/MyRepository.git
 * git push -u origin main
 */

/** FORK REPOSITORY AND PULL REQUEST
 * Fork a GitHub repository.
 * Clone the forked repository to your local system.
 * Add a Git remote for the original repository.
 * Create a feature branch in which to place your changes.
 * Make your changes to the new branch.
 * Commit the changes to the branch.
 * Push the branch to GitHub.
 * Open a pull request from the new branch to the original repo.
 * Clean up after your pull request is merged.
 */


/** CREATE NEW BRANCH FROM MASTER BRANCH
 * git checkout main
 * git branch <new branch>
 * git checkout <new branch>
 */

/** ADD CHANGES TO BRANCH
 * git add . or git add -A
 * git commit -m "commit message"
 * git push -u origin <local-branch>
 */

/** MERGE CHANGES TO MASTER BRANCH
 * git add . or git add -A
 * git commit -m "commit message"
 * git checkout main
 * git merge <new branch>
 */

/** GIT COMMANDS
 * CREATE NEW BRANCH:
 *  git branch -m <local-branch>
 * ADD GITHUB REPOSITORY TO BRANCH:
 *  git remote add origin <github repository link>
 * PUSH COMMIT TO BRANCH:
 *  git push -u origin <local-branch>
 * DELETE BRANCH:
 *  git branch -d <local-branch>
 * ADD CHANGES TO GIT:
 *  git add .
 * COMMIT FILES TO GIT:
 *  git commit -m "message"
 * PUSH COMMIT TO BRANCH:
 *  git push -u origin <local-branch>
 * SWITCH BRANCH:
 *  git checkout <local-branch>
 * MERGE BRANCH INTO CURRENT BRANCH:
 *  git merge <local-branch>
 * CHECK USER COMMIT LOG:
 *  git log --graph
 * CREATE AND SWITCH TO NEW BRANCH:
 *  git checkout -b <local-branch>
 * CLONE REPOSITORY FROM GITHUB:
 *  git clone <repository link>
 * CHANGE REMOTE ORIGIN:
 *  git remote set-url origin <repository link>
 * CHANGE REMOTE UPSTREAM:
 *  git remote set-url upstream <repository link>
 * View REMOTE ORIGIN:
 *  git remote -v
 * Show origin associated with project
 *  git remote show origin
 * Remove origin associated with project
 *  git remote rm origin
 */

/**                               Intellij                                   */

/**
* multi cursor:
*       shift + option + mouse click
*       option + option hold + arrow up or down
*/